/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type WaveDivider = {
  _type: "waveDivider";
  variant?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "waveDividerVariant";
  };
};

export type ContactForm = {
  _type: "contact-form";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  tagLine?: string;
  title?: string;
  successMessage?: string;
};

export type SpecialtyCard = {
  _type: "specialty-card";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  cards?: Array<{
    name?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    link?: {
      linkType?: "internal" | "external";
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      externalUrl?: string;
    };
    _type: "card";
    _key: string;
  }>;
};

export type SectionBlock = {
  _type: "section-block";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  layout?: "image-left" | "image-right";
  reverseOnMobile?: boolean;
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  buttonLabel?: string;
  link?: {
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    };
    externalUrl?: string;
  };
  buttonVariant?: "default" | "secondary" | "ghost" | "outline" | "destructive" | "link" | "whatsapp";
};

export type AllPosts = {
  _type: "all-posts";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
};

export type FormNewsletter = {
  _type: "form-newsletter";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  stackAlign?: "left" | "center";
  consentText?: string;
  buttonText?: string;
  successMessage?: string;
};

export type Faqs = {
  _type: "faqs";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
};

export type LogoCloud1 = {
  _type: "logo-cloud-1";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  title?: string;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type Cta1 = {
  _type: "cta-1";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  sectionWidth?: "default" | "narrow";
  stackAlign?: "left" | "center";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & Link>;
};

export type Timelines1 = {
  _type: "timelines-1";
  title?: string;
  tagLine?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
};

export type TimelineRow = {
  _type: "timeline-row";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  timelines?: Array<{
    _key: string;
  } & Timelines1>;
};

export type Carousel2 = {
  _type: "carousel-2";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  buttonText?: string;
  buttonLink?: string;
};

export type Carousel1 = {
  _type: "carousel-1";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
};

export type GridRow = {
  _type: "grid-row";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  gridColumns?: "grid-cols-2" | "grid-cols-3" | "grid-cols-4";
  columns?: Array<{
    _key: string;
  } & GridCard | {
    _key: string;
  } & GridPost | {
    _key: string;
  } & PricingCard>;
};

export type GridPost = {
  _type: "grid-post";
  post?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
};

export type PricingCard = {
  _type: "pricing-card";
  title?: string;
  tagLine?: string;
  price?: {
    value?: number;
    period?: string;
  };
  list?: Array<string>;
  excerpt?: string;
  link?: Link;
};

export type GridCard = {
  _type: "grid-card";
  title?: string;
  excerpt?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: Link;
};

export type SplitInfo = {
  _type: "split-info";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  tags?: Array<string>;
};

export type SplitInfoList = {
  _type: "split-info-list";
  list?: Array<{
    _key: string;
  } & SplitInfo>;
};

export type SplitImage = {
  _type: "split-image";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type SplitCard = {
  _type: "split-card";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
};

export type SplitCardsList = {
  _type: "split-cards-list";
  list?: Array<{
    _key: string;
  } & SplitCard>;
};

export type SplitContent = {
  _type: "split-content";
  sticky?: boolean;
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  link?: Link;
};

export type SplitRow = {
  _type: "split-row";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  noGap?: boolean;
  splitColumns?: Array<{
    _key: string;
  } & SplitContent | {
    _key: string;
  } & SplitCardsList | {
    _key: string;
  } & SplitImage | {
    _key: string;
  } & SplitInfoList>;
};

export type SectionHeader = {
  _type: "section-header";
  padding?: SectionPadding;
  colorVariant?: "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";
  sectionWidth?: "default" | "narrow";
  stackAlign?: "left" | "center";
  tagLine?: string;
  title?: string;
  description?: string;
};

export type Hero2 = {
  _type: "hero-2";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  buttons?: Array<{
    buttonLabel?: string;
    buttonType?: "custom" | "whatsapp";
    link?: {
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      };
      externalUrl?: string;
    };
    buttonVariant?: "default" | "secondary" | "ghost" | "outline" | "destructive" | "link";
    whatsappPhone?: string;
    whatsappMessage?: string;
    _key: string;
  }>;
};

export type Hero1 = {
  _type: "hero-1";
  theme?: "dark-shade" | "mid-shade" | "light-shade" | "white";
  layout?: "image-left" | "image-right";
  reverseOnMobile?: boolean;
  tagLine?: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  showButton?: boolean;
  buttonType?: "primaryCTA" | "custom";
  customButton?: {
    label?: string;
    link?: string;
    isExternal?: boolean;
  };
};

export type SectionPadding = {
  _type: "section-padding";
  top?: boolean;
  bottom?: boolean;
};

export type ButtonVariant = "default" | "destructive" | "outline" | "secondary" | "ghost" | "link";

export type ColorVariant = "background" | "primary" | "secondary" | "card" | "accent" | "destructive" | "muted";

export type Link = {
  _type: "link";
  title?: string;
  href?: string;
  target?: boolean;
  buttonVariant?: ButtonVariant;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "image";
  _key: string;
} | {
  videoId?: string;
  _type: "youtube";
  _key: string;
} | {
  _key: string;
} & Code>;

export type Booking = {
  _id: string;
  _type: "booking";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  bookingToken?: string;
  status?: "awaiting_verification" | "confirmed" | "cancelled" | "expired";
  doctorSlug?: string;
  parentName?: string;
  patientName?: string;
  email?: string;
  phone?: string;
  date?: string;
  time?: string;
  zcalEventId?: string;
  createdAt?: string;
};

export type Specialities = {
  _id: string;
  _type: "specialities";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  blocks?: Array<{
    _key: string;
  } & Hero1 | {
    _key: string;
  } & Hero2 | {
    _key: string;
  } & SectionHeader | {
    _key: string;
  } & SplitRow | {
    _key: string;
  } & GridRow | {
    _key: string;
  } & Carousel1 | {
    _key: string;
  } & Carousel2 | {
    _key: string;
  } & TimelineRow | {
    _key: string;
  } & Cta1 | {
    _key: string;
  } & LogoCloud1 | {
    _key: string;
  } & Faqs | {
    _key: string;
  } & FormNewsletter | {
    _key: string;
  } & ContactForm | {
    _key: string;
  } & AllPosts | {
    _key: string;
  } & SectionBlock | {
    _key: string;
  } & SpecialtyCard | {
    _key: string;
  } & WaveDivider>;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type WaveDividerVariant = {
  _id: string;
  _type: "waveDividerVariant";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  label?: string;
  desktopSvg?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  mobileSvg?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type BlogQuestion = {
  _id: string;
  _type: "blogQuestion";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  email?: string;
  phone?: string;
  question?: string;
  approved?: boolean;
  post?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  submittedAt?: string;
};

export type Comment = {
  _id: string;
  _type: "comment";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  email?: string;
  comment?: string;
  post?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  approved?: boolean;
  submittedAt?: string;
};

export type Review = {
  _id: string;
  _type: "review";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  rating?: number;
  comment?: string;
  doctor?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "doctor";
  };
  approved?: boolean;
  submittedAt?: string;
  orderRank?: string;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  body?: BlockContent;
  rating?: number;
  orderRank?: string;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  body?: BlockContent;
  orderRank?: string;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  orderRank?: string;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  orderRank?: string;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  doctorAuthor?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "doctor";
  };
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  body?: BlockContent;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Doctor = {
  _id: string;
  _type: "doctor";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderRank?: string;
  name?: string;
  slug?: Slug;
  photo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  whatsappNumber?: string;
  specialty?: string;
  location?: string;
  languages?: Array<string>;
  appointmentFee?: number;
  about?: string;
  expertise?: Array<string>;
  experienceYears?: number;
  searchKeywords?: Array<string>;
  qualifications?: {
    education?: Array<string>;
    achievements?: Array<string>;
    publications?: Array<string>;
    others?: Array<string>;
  };
  averageRating?: number;
  reviews?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "review";
  }>;
  authoredArticles?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
  bookingId?: string;
  externalApiId?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  blocks?: Array<{
    _key: string;
  } & Hero1 | {
    _key: string;
  } & Hero2 | {
    _key: string;
  } & SectionHeader | {
    _key: string;
  } & SplitRow | {
    _key: string;
  } & GridRow | {
    _key: string;
  } & Carousel1 | {
    _key: string;
  } & Carousel2 | {
    _key: string;
  } & TimelineRow | {
    _key: string;
  } & Cta1 | {
    _key: string;
  } & LogoCloud1 | {
    _key: string;
  } & Faqs | {
    _key: string;
  } & FormNewsletter | {
    _key: string;
  } & ContactForm | {
    _key: string;
  } & AllPosts | {
    _key: string;
  } & SectionBlock | {
    _key: string;
  } & SpecialtyCard | {
    _key: string;
  } & WaveDivider>;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Code = {
  _type: "code";
  language?: string;
  filename?: string;
  code?: string;
  highlightedLines?: Array<number>;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | WaveDivider | ContactForm | SpecialtyCard | SectionBlock | AllPosts | FormNewsletter | Faqs | LogoCloud1 | Cta1 | Timelines1 | TimelineRow | Carousel2 | Carousel1 | GridRow | GridPost | PricingCard | GridCard | SplitInfo | SplitInfoList | SplitImage | SplitCard | SplitCardsList | SplitContent | SplitRow | SectionHeader | Hero2 | Hero1 | SectionPadding | ButtonVariant | ColorVariant | Link | BlockContent | Booking | Specialities | WaveDividerVariant | BlogQuestion | Comment | Review | Testimonial | Faq | Category | Author | Post | Doctor | Page | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Slug | Code;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./app/(main)/blog/doctor/[slug]/page.tsx
// Variable: doctorPostsQuery
// Query: {    "doctor": *[_type == "doctor" && slug.current == $slug][0]{      _id,      name,      specialty,      photo { asset->{ url } },      slug,      expertise,      experienceYears,      whatsappNumber,      appointmentFee,      reviews[] { _id, name, rating, comment, submittedAt }    },    "posts": *[_type == "post" && doctor._ref == *[_type == "doctor" && slug.current == $slug][0]._id] | order(publishedAt desc){      _id,      title,      slug,      excerpt,      publishedAt,      mainImage { asset->{ url } }    }  }
export type DoctorPostsQueryResult = {
  doctor: {
    _id: string;
    name: string | null;
    specialty: string | null;
    photo: {
      asset: {
        url: string | null;
      } | null;
    } | null;
    slug: Slug | null;
    expertise: Array<string> | null;
    experienceYears: number | null;
    whatsappNumber: string | null;
    appointmentFee: number | null;
    reviews: Array<{
      _id: null;
      name: null;
      rating: null;
      comment: null;
      submittedAt: null;
    }> | null;
  } | null;
  posts: Array<{
    _id: string;
    title: string | null;
    slug: Slug | null;
    excerpt: string | null;
    publishedAt: null;
    mainImage: null;
  }>;
};

// Source: ./app/sitemap.ts
// Variable: pagesQuery
// Query: *[_type == 'page'] | order(slug.current) {      'url': $baseUrl + select(slug.current == 'index' => '', '/' + slug.current),      'lastModified': _updatedAt,      'changeFrequency': 'daily',      'priority': select(        slug.current == 'index' => 1,        0.5      )    }
export type PagesQueryResult = Array<{
  url: unknown;
  lastModified: string;
  changeFrequency: "daily";
  priority: 0.5 | 1;
}>;
// Variable: postsQuery
// Query: *[_type == 'post'] | order(_updatedAt desc) {      'url': $baseUrl + '/blog/' + slug.current,      'lastModified': _updatedAt,      'changeFrequency': 'weekly',      'priority': 0.7    }
export type PostsQueryResult = Array<{
  url: unknown;
  lastModified: string;
  changeFrequency: "weekly";
  priority: 0.7;
}>;

// Source: ./sanity/queries/blog-landing.ts
// Variable: BLOG_LANDING_QUERY
// Query: {  "categories": *[_type == "category"] | order(title asc) {    _id,    title  },  "posts": *[_type == "post" && count(categories) > 0] | order(_createdAt desc) {    _id,    title,    slug {      current    },    excerpt,    image {      asset-> {        url      },      alt    },    "categoryIds": categories[]->_id  }}
export type BLOG_LANDING_QUERYResult = {
  categories: Array<{
    _id: string;
    title: string | null;
  }>;
  posts: Array<{
    _id: string;
    title: string | null;
    slug: {
      current: string | null;
    } | null;
    excerpt: string | null;
    image: {
      asset: {
        url: string | null;
      } | null;
      alt: string | null;
    } | null;
    categoryIds: Array<string> | null;
  }>;
};

// Source: ./sanity/queries/category.ts
// Variable: getAllCategoriesQuery
// Query: *[_type == "category"] | order(orderRank) {    _id,    title,    slug  }
export type GetAllCategoriesQueryResult = Array<{
  _id: string;
  title: string | null;
  slug: null;
}>;

// Source: ./sanity/queries/page.ts
// Variable: PAGE_QUERY
// Query: *[_type == "page" && slug.current == $slug][0]{    blocks[]{        _type == "hero-1" => {    _type,    _key,    theme,    layout,    reverseOnMobile,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    image{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    showButton,    buttonType,    customButton {      label,      link,      isExternal    }  },        _type == "hero-2" => {    _type,    _key,    theme,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    buttons[]{      buttonLabel,      buttonType,      link {        internalLink->{          slug {            current          }        },        externalUrl      },      buttonVariant,      whatsappPhone,      whatsappMessage    }  },        _type == "section-header" => {    _type,    _key,    padding,    colorVariant,    sectionWidth,    stackAlign,    tagLine,    title,    description,    link,  },        _type == "split-row" => {    _type,    _key,    padding,    colorVariant,    noGap,    splitColumns[]{        _type == "split-content" => {    _type,    _key,    sticky,    padding,    colorVariant,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    link,  },        _type == "split-cards-list" => {    _type,    _key,    list[]{      tagLine,      title,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "split-image" => {    _type,    _key,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "split-info-list" => {    _type,    _key,    list[]{      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      title,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },      tags[],    },  },    },  },        _type == "grid-row" => {    _type,    _key,    padding,    colorVariant,    gridColumns,    columns[]{        _type == "grid-card" => {    _type,    _key,    title,    excerpt,    image{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    link,  },        _type == "pricing-card" => {    _type,    _key,    title,    tagLine,    price,    list[],    excerpt,    link,  },        _type == "grid-post" => {    _type,    _key,    post->{      title,      slug,      excerpt,      image{        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      categories[]->{        _id,        title,      },    },  },    },  },        _type == "carousel-1" => {    _type,    _key,    theme,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    orientation,  },        _type == "carousel-2" => {    _type,    _key,    theme,    tagLine,    title,    body,    buttonText,    buttonLink,    testimonial[]->{      _id,      name,      title,      image{        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },      rating,    },  },        _type == "timeline-row" => {    _type,    _key,    padding,    colorVariant,    timelines[]{      title,      tagLine,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "cta-1" => {    _type,    _key,    padding,    colorVariant,    sectionWidth,    stackAlign,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    links,  },        _type == "logo-cloud-1" => {    _type,    _key,    padding,    colorVariant,    title,    images[]{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "faqs" => {    _type,    _key,    theme,    tagLine,    title,    body,    faqs[]->{      _id,      title,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "form-newsletter" => {    _type,    _key,    padding,    colorVariant,    stackAlign,    consentText,    buttonText,    successMessage,  },        _type == "all-posts" => {    _type,    _key,    padding,    colorVariant,  },        _type == "section-block" => {    _type,    _key,    theme,    layout,    reverseOnMobile,    tagLine,    title,    body,    image {      ...,      alt,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      }    },    buttonLabel,    link {      internalLink->{        slug {          current        }      },      externalUrl    },    buttonVariant,    wavePair->{      label,      desktop {        asset->{          url        }      },      mobile {        asset->{          url        }      }    }  },        _type == "specialty-card" => {    _type,    _key,    theme,    tagLine,    title,    body,    cards[] {      _key,      name,      image {        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      link {        linkType,        internalLink->{          slug {            current          }        },        externalUrl      }    }  },        _type == "contact-form" => {    _type,    _key,    theme,    tagLine,    title,    successMessage  },        _type == "waveDivider" => {    _type,    _key,    variant->{      label,      desktopSvg {        asset->{          _id,          url,          mimeType,          metadata {            dimensions {              width,              height            }          }        }      },      mobileSvg {        asset->{          _id,          url,          mimeType,          metadata {            dimensions {              width,              height            }          }        }      }    }  }, // Add the waveDivider query    },    meta_title,    meta_description,    noindex,    ogImage {      asset->{        _id,        url,        metadata {          dimensions {            width,            height          }        }      },    }  }
export type PAGE_QUERYResult = {
  blocks: Array<{
    _type: "all-posts";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
  } | {
    _type: "carousel-1";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    orientation: null;
  } | {
    _type: "carousel-2";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttonText: string | null;
    buttonLink: string | null;
    testimonial: null;
  } | {
    _type: "contact-form";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    successMessage: string | null;
  } | {
    _type: "cta-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    links: Array<{
      _key: string;
    } & Link> | null;
  } | {
    _type: "faqs";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    faqs: Array<{
      _id: string;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _type: "form-newsletter";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    stackAlign: "center" | "left" | null;
    consentText: string | null;
    buttonText: string | null;
    successMessage: string | null;
  } | {
    _type: "grid-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | "grid-cols-4" | null;
    columns: Array<{
      _type: "grid-card";
      _key: string;
      title: string | null;
      excerpt: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
      link: Link | null;
    } | {
      _type: "grid-post";
      _key: string;
      post: {
        title: string | null;
        slug: Slug | null;
        excerpt: string | null;
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          alt: string | null;
        } | null;
        categories: Array<{
          _id: string;
          title: string | null;
        }> | null;
      } | null;
    } | {
      _type: "pricing-card";
      _key: string;
      title: string | null;
      tagLine: string | null;
      price: {
        value?: number;
        period?: string;
      } | null;
      list: Array<string> | null;
      excerpt: string | null;
      link: Link | null;
    }> | null;
  } | {
    _type: "hero-1";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    layout: "image-left" | "image-right" | null;
    reverseOnMobile: boolean | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
    showButton: boolean | null;
    buttonType: "custom" | "primaryCTA" | null;
    customButton: {
      label: string | null;
      link: string | null;
      isExternal: boolean | null;
    } | null;
  } | {
    _type: "hero-2";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    buttons: Array<{
      buttonLabel: string | null;
      buttonType: "custom" | "whatsapp" | null;
      link: {
        internalLink: {
          slug: {
            current: string | null;
          } | null;
        } | null;
        externalUrl: string | null;
      } | null;
      buttonVariant: "default" | "destructive" | "ghost" | "link" | "outline" | "secondary" | null;
      whatsappPhone: string | null;
      whatsappMessage: string | null;
    }> | null;
  } | {
    _type: "logo-cloud-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    title: string | null;
    images: Array<{
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
      _key: string;
    }> | null;
  } | {
    _type: "section-block";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    layout: "image-left" | "image-right" | null;
    reverseOnMobile: boolean | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
    buttonLabel: string | null;
    link: {
      internalLink: {
        slug: {
          current: string | null;
        } | null;
      } | null;
      externalUrl: string | null;
    } | null;
    buttonVariant: "default" | "destructive" | "ghost" | "link" | "outline" | "secondary" | "whatsapp" | null;
    wavePair: null;
  } | {
    _type: "section-header";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    tagLine: string | null;
    title: string | null;
    description: string | null;
    link: null;
  } | {
    _type: "specialty-card";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    cards: Array<{
      _key: string;
      name: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      link: {
        linkType: "external" | "internal" | null;
        internalLink: {
          slug: {
            current: string | null;
          } | null;
        } | null;
        externalUrl: string | null;
      } | null;
    }> | null;
  } | {
    _type: "split-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    noGap: boolean | null;
    splitColumns: Array<{
      _type: "split-cards-list";
      _key: string;
      list: Array<{
        tagLine: string | null;
        title: string | null;
        body: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
        } | {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
        }> | null;
      }> | null;
    } | {
      _type: "split-content";
      _key: string;
      sticky: boolean | null;
      padding: SectionPadding | null;
      colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
      tagLine: string | null;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
      }> | null;
      link: Link | null;
    } | {
      _type: "split-image";
      _key: string;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | {
      _type: "split-info-list";
      _key: string;
      list: Array<{
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt: string | null;
          _type: "image";
        } | null;
        title: string | null;
        body: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
        } | {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
        }> | null;
        tags: Array<string> | null;
      }> | null;
    }> | null;
  } | {
    _type: "timeline-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    timelines: Array<{
      title: string | null;
      tagLine: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _type: "waveDivider";
    _key: string;
    variant: {
      label: string | null;
      desktopSvg: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileSvg: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    } | null;
  }> | null;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: PAGES_SLUGS_QUERY
// Query: *[_type == "page" && defined(slug)]{slug}
export type PAGES_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;

// Source: ./sanity/queries/post.ts
// Variable: POST_QUERY
// Query: *[_type == "post" && slug.current == $slug][0]{  title,  slug,  image {    ...,    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    },    alt  },  body[] {    ...,    _type == "image" => {      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      }    }  },  categories[]->{    _id,    title,    slug  },  doctorAuthor-> {    _id,    name,    slug,    photo {      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions { width, height }        }      }    },    specialty,    experienceYears,    expertise,    whatsappNumber,    appointmentFee,    reviews[]->{      _id,      name,      rating,      comment,      submittedAt    }  },  _createdAt,  _updatedAt,  meta_title,  meta_description,  noindex,  ogImage {    asset->{      _id,      url,      metadata {        dimensions {          width,          height        }      }    }  }}
export type POST_QUERYResult = {
  title: string | null;
  slug: Slug | null;
  image: {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string | null;
    _type: "image";
  } | null;
  body: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
    _type: "code";
    language?: string;
    filename?: string;
    code?: string;
    highlightedLines?: Array<number>;
  } | {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  }> | null;
  categories: Array<{
    _id: string;
    title: string | null;
    slug: null;
  }> | null;
  doctorAuthor: {
    _id: string;
    name: string | null;
    slug: Slug | null;
    photo: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
    } | null;
    specialty: string | null;
    experienceYears: number | null;
    expertise: Array<string> | null;
    whatsappNumber: string | null;
    appointmentFee: number | null;
    reviews: Array<{
      _id: string;
      name: string | null;
      rating: number | null;
      comment: string | null;
      submittedAt: string | null;
    }> | null;
  } | null;
  _createdAt: string;
  _updatedAt: string;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: POSTS_QUERY
// Query: *[_type == "post" && defined(slug.current)] | order(_createdAt desc) {  _id,  title,  slug,  excerpt,  publishedAt,  image {    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    },    alt  },  doctorAuthor-> {    _id,    name,    slug,    specialty,    photo {      asset->{ url }    }  }}
export type POSTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  excerpt: string | null;
  publishedAt: null;
  image: {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    alt: string | null;
  } | null;
  doctorAuthor: {
    _id: string;
    name: string | null;
    slug: Slug | null;
    specialty: string | null;
    photo: {
      asset: {
        url: string | null;
      } | null;
    } | null;
  } | null;
}>;
// Variable: POSTS_SLUGS_QUERY
// Query: *[_type == "post" && defined(slug.current)]{  slug}
export type POSTS_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;
// Variable: BLOG_PREVIEW_QUERY
// Query: *[_type == "category"]{  _id,  title,  "posts": *[    _type == "post" &&    references(^._id)  ] | order(_createdAt desc)[0...3] {    _id,    title,    slug,    excerpt,    image {      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    }  }}
export type BLOG_PREVIEW_QUERYResult = Array<{
  _id: string;
  title: string | null;
  posts: Array<{
    _id: string;
    title: string | null;
    slug: Slug | null;
    excerpt: string | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
  }>;
}>;

// Source: ./sanity/queries/specialities.ts
// Variable: SPECIALITIES_PAGE_QUERY
// Query: *[_type == "specialities" && slug.current == $slug][0]{    title,    blocks[]{        _type == "hero-1" => {    _type,    _key,    theme,    layout,    reverseOnMobile,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    image{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    showButton,    buttonType,    customButton {      label,      link,      isExternal    }  },        _type == "hero-2" => {    _type,    _key,    theme,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    buttons[]{      buttonLabel,      buttonType,      link {        internalLink->{          slug {            current          }        },        externalUrl      },      buttonVariant,      whatsappPhone,      whatsappMessage    }  },        _type == "section-header" => {    _type,    _key,    padding,    colorVariant,    sectionWidth,    stackAlign,    tagLine,    title,    description,    link,  },        _type == "split-row" => {    _type,    _key,    padding,    colorVariant,    noGap,    splitColumns[]{        _type == "split-content" => {    _type,    _key,    sticky,    padding,    colorVariant,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    link,  },        _type == "split-cards-list" => {    _type,    _key,    list[]{      tagLine,      title,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "split-image" => {    _type,    _key,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "split-info-list" => {    _type,    _key,    list[]{      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      title,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },      tags[],    },  },    },  },        _type == "grid-row" => {    _type,    _key,    padding,    colorVariant,    gridColumns,    columns[]{        _type == "grid-card" => {    _type,    _key,    title,    excerpt,    image{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    link,  },        _type == "pricing-card" => {    _type,    _key,    title,    tagLine,    price,    list[],    excerpt,    link,  },        _type == "grid-post" => {    _type,    _key,    post->{      title,      slug,      excerpt,      image{        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      categories[]->{        _id,        title,      },    },  },    },  },        _type == "carousel-1" => {    _type,    _key,    theme,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    orientation,  },        _type == "carousel-2" => {    _type,    _key,    theme,    tagLine,    title,    body,    buttonText,    buttonLink,    testimonial[]->{      _id,      name,      title,      image{        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },      rating,    },  },        _type == "timeline-row" => {    _type,    _key,    padding,    colorVariant,    timelines[]{      title,      tagLine,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "cta-1" => {    _type,    _key,    padding,    colorVariant,    sectionWidth,    stackAlign,    tagLine,    title,    body[]{      ...,      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    links,  },        _type == "logo-cloud-1" => {    _type,    _key,    padding,    colorVariant,    title,    images[]{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "faqs" => {    _type,    _key,    theme,    tagLine,    title,    body,    faqs[]->{      _id,      title,      body[]{        ...,        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "form-newsletter" => {    _type,    _key,    padding,    colorVariant,    stackAlign,    consentText,    buttonText,    successMessage,  },        _type == "all-posts" => {    _type,    _key,    padding,    colorVariant,  },        _type == "section-block" => {    _type,    _key,    theme,    layout,    reverseOnMobile,    tagLine,    title,    body,    image {      ...,      alt,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      }    },    buttonLabel,    link {      internalLink->{        slug {          current        }      },      externalUrl    },    buttonVariant,    wavePair->{      label,      desktop {        asset->{          url        }      },      mobile {        asset->{          url        }      }    }  },        _type == "specialty-card" => {    _type,    _key,    theme,    tagLine,    title,    body,    cards[] {      _key,      name,      image {        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      link {        linkType,        internalLink->{          slug {            current          }        },        externalUrl      }    }  },        _type == "contact-form" => {    _type,    _key,    theme,    tagLine,    title,    successMessage  },        _type == "waveDivider" => {    _type,    _key,    variant->{      label,      desktopSvg {        asset->{          _id,          url,          mimeType,          metadata {            dimensions {              width,              height            }          }        }      },      mobileSvg {        asset->{          _id,          url,          mimeType,          metadata {            dimensions {              width,              height            }          }        }      }    }  },    },    meta_title,    meta_description,    noindex,    ogImage {      asset->{        _id,        url,        metadata {          dimensions {            width,            height          }        }      },    }  }
export type SPECIALITIES_PAGE_QUERYResult = {
  title: string | null;
  blocks: Array<{
    _type: "all-posts";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
  } | {
    _type: "carousel-1";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    orientation: null;
  } | {
    _type: "carousel-2";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    buttonText: string | null;
    buttonLink: string | null;
    testimonial: null;
  } | {
    _type: "contact-form";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    successMessage: string | null;
  } | {
    _type: "cta-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    links: Array<{
      _key: string;
    } & Link> | null;
  } | {
    _type: "faqs";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    faqs: Array<{
      _id: string;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _type: "form-newsletter";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    stackAlign: "center" | "left" | null;
    consentText: string | null;
    buttonText: string | null;
    successMessage: string | null;
  } | {
    _type: "grid-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | "grid-cols-4" | null;
    columns: Array<{
      _type: "grid-card";
      _key: string;
      title: string | null;
      excerpt: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
      link: Link | null;
    } | {
      _type: "grid-post";
      _key: string;
      post: {
        title: string | null;
        slug: Slug | null;
        excerpt: string | null;
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          alt: string | null;
        } | null;
        categories: Array<{
          _id: string;
          title: string | null;
        }> | null;
      } | null;
    } | {
      _type: "pricing-card";
      _key: string;
      title: string | null;
      tagLine: string | null;
      price: {
        value?: number;
        period?: string;
      } | null;
      list: Array<string> | null;
      excerpt: string | null;
      link: Link | null;
    }> | null;
  } | {
    _type: "hero-1";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    layout: "image-left" | "image-right" | null;
    reverseOnMobile: boolean | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
    showButton: boolean | null;
    buttonType: "custom" | "primaryCTA" | null;
    customButton: {
      label: string | null;
      link: string | null;
      isExternal: boolean | null;
    } | null;
  } | {
    _type: "hero-2";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    buttons: Array<{
      buttonLabel: string | null;
      buttonType: "custom" | "whatsapp" | null;
      link: {
        internalLink: {
          slug: {
            current: string | null;
          } | null;
        } | null;
        externalUrl: string | null;
      } | null;
      buttonVariant: "default" | "destructive" | "ghost" | "link" | "outline" | "secondary" | null;
      whatsappPhone: string | null;
      whatsappMessage: string | null;
    }> | null;
  } | {
    _type: "logo-cloud-1";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    title: string | null;
    images: Array<{
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
      _key: string;
    }> | null;
  } | {
    _type: "section-block";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    layout: "image-left" | "image-right" | null;
    reverseOnMobile: boolean | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
    buttonLabel: string | null;
    link: {
      internalLink: {
        slug: {
          current: string | null;
        } | null;
      } | null;
      externalUrl: string | null;
    } | null;
    buttonVariant: "default" | "destructive" | "ghost" | "link" | "outline" | "secondary" | "whatsapp" | null;
    wavePair: null;
  } | {
    _type: "section-header";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    tagLine: string | null;
    title: string | null;
    description: string | null;
    link: null;
  } | {
    _type: "specialty-card";
    _key: string;
    theme: "dark-shade" | "light-shade" | "mid-shade" | "white" | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    cards: Array<{
      _key: string;
      name: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      link: {
        linkType: "external" | "internal" | null;
        internalLink: {
          slug: {
            current: string | null;
          } | null;
        } | null;
        externalUrl: string | null;
      } | null;
    }> | null;
  } | {
    _type: "split-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    noGap: boolean | null;
    splitColumns: Array<{
      _type: "split-cards-list";
      _key: string;
      list: Array<{
        tagLine: string | null;
        title: string | null;
        body: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
        } | {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
        }> | null;
      }> | null;
    } | {
      _type: "split-content";
      _key: string;
      sticky: boolean | null;
      padding: SectionPadding | null;
      colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
      tagLine: string | null;
      title: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
      }> | null;
      link: Link | null;
    } | {
      _type: "split-image";
      _key: string;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    } | {
      _type: "split-info-list";
      _key: string;
      list: Array<{
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt: string | null;
          _type: "image";
        } | null;
        title: string | null;
        body: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
        } | {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
        }> | null;
        tags: Array<string> | null;
      }> | null;
    }> | null;
  } | {
    _type: "timeline-row";
    _key: string;
    padding: SectionPadding | null;
    colorVariant: "accent" | "background" | "card" | "destructive" | "muted" | "primary" | "secondary" | null;
    timelines: Array<{
      title: string | null;
      tagLine: string | null;
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
      }> | null;
    }> | null;
  } | {
    _type: "waveDivider";
    _key: string;
    variant: {
      label: string | null;
      desktopSvg: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
      mobileSvg: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
      } | null;
    } | null;
  }> | null;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: SPECIALITIES_SLUGS_QUERY
// Query: *[_type == "specialities" && defined(slug)]{slug}
export type SPECIALITIES_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  {\n    \"doctor\": *[_type == \"doctor\" && slug.current == $slug][0]{\n      _id,\n      name,\n      specialty,\n      photo { asset->{ url } },\n      slug,\n      expertise,\n      experienceYears,\n      whatsappNumber,\n      appointmentFee,\n      reviews[] { _id, name, rating, comment, submittedAt }\n    },\n    \"posts\": *[_type == \"post\" && doctor._ref == *[_type == \"doctor\" && slug.current == $slug][0]._id] | order(publishedAt desc){\n      _id,\n      title,\n      slug,\n      excerpt,\n      publishedAt,\n      mainImage { asset->{ url } }\n    }\n  }\n": DoctorPostsQueryResult;
    "\n    *[_type == 'page'] | order(slug.current) {\n      'url': $baseUrl + select(slug.current == 'index' => '', '/' + slug.current),\n      'lastModified': _updatedAt,\n      'changeFrequency': 'daily',\n      'priority': select(\n        slug.current == 'index' => 1,\n        0.5\n      )\n    }\n  ": PagesQueryResult;
    "\n    *[_type == 'post'] | order(_updatedAt desc) {\n      'url': $baseUrl + '/blog/' + slug.current,\n      'lastModified': _updatedAt,\n      'changeFrequency': 'weekly',\n      'priority': 0.7\n    }\n  ": PostsQueryResult;
    "\n{\n  \"categories\": *[_type == \"category\"] | order(title asc) {\n    _id,\n    title\n  },\n  \"posts\": *[_type == \"post\" && count(categories) > 0] | order(_createdAt desc) {\n    _id,\n    title,\n    slug {\n      current\n    },\n    excerpt,\n    image {\n      asset-> {\n        url\n      },\n      alt\n    },\n    \"categoryIds\": categories[]->_id\n  }\n}\n": BLOG_LANDING_QUERYResult;
    "\n  *[_type == \"category\"] | order(orderRank) {\n    _id,\n    title,\n    slug\n  }\n": GetAllCategoriesQueryResult;
    "\n  *[_type == \"page\" && slug.current == $slug][0]{\n    blocks[]{\n      \n  _type == \"hero-1\" => {\n    _type,\n    _key,\n    theme,\n    layout,\n    reverseOnMobile,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    image{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    showButton,\n    buttonType,\n    customButton {\n      label,\n      link,\n      isExternal\n    }\n  }\n,\n      \n  _type == \"hero-2\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    buttons[]{\n      buttonLabel,\n      buttonType,\n      link {\n        internalLink->{\n          slug {\n            current\n          }\n        },\n        externalUrl\n      },\n      buttonVariant,\n      whatsappPhone,\n      whatsappMessage\n    }\n  }\n,\n      \n  _type == \"section-header\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionWidth,\n    stackAlign,\n    tagLine,\n    title,\n    description,\n    link,\n  }\n,\n      \n  _type == \"split-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    noGap,\n    splitColumns[]{\n      \n  _type == \"split-content\" => {\n    _type,\n    _key,\n    sticky,\n    padding,\n    colorVariant,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    link,\n  }\n,\n      \n  _type == \"split-cards-list\" => {\n    _type,\n    _key,\n    list[]{\n      tagLine,\n      title,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"split-image\" => {\n    _type,\n    _key,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"split-info-list\" => {\n    _type,\n    _key,\n    list[]{\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      title,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n      tags[],\n    },\n  }\n,\n    },\n  }\n,\n      \n  _type == \"grid-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    gridColumns,\n    columns[]{\n      \n  _type == \"grid-card\" => {\n    _type,\n    _key,\n    title,\n    excerpt,\n    image{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    link,\n  }\n,\n      \n  _type == \"pricing-card\" => {\n    _type,\n    _key,\n    title,\n    tagLine,\n    price,\n    list[],\n    excerpt,\n    link,\n  }\n,\n      \n  _type == \"grid-post\" => {\n    _type,\n    _key,\n    post->{\n      title,\n      slug,\n      excerpt,\n      image{\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      categories[]->{\n        _id,\n        title,\n      },\n    },\n  }\n,\n    },\n  }\n,\n      \n  _type == \"carousel-1\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    orientation,\n  }\n,\n      \n  _type == \"carousel-2\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body,\n    buttonText,\n    buttonLink,\n    testimonial[]->{\n      _id,\n      name,\n      title,\n      image{\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n      rating,\n    },\n  }\n,\n      \n  _type == \"timeline-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    timelines[]{\n      title,\n      tagLine,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"cta-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionWidth,\n    stackAlign,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    links,\n  }\n,\n      \n  _type == \"logo-cloud-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    title,\n    images[]{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"faqs\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body,\n    faqs[]->{\n      _id,\n      title,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"form-newsletter\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    stackAlign,\n    consentText,\n    buttonText,\n    successMessage,\n  }\n,\n      \n  _type == \"all-posts\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n  }\n,\n      \n  _type == \"section-block\" => {\n    _type,\n    _key,\n    theme,\n    layout,\n    reverseOnMobile,\n    tagLine,\n    title,\n    body,\n    image {\n      ...,\n      alt,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    buttonLabel,\n    link {\n      internalLink->{\n        slug {\n          current\n        }\n      },\n      externalUrl\n    },\n    buttonVariant,\n    wavePair->{\n      label,\n      desktop {\n        asset->{\n          url\n        }\n      },\n      mobile {\n        asset->{\n          url\n        }\n      }\n    }\n  }\n,\n      \n  _type == \"specialty-card\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body,\n    cards[] {\n      _key,\n      name,\n      image {\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      link {\n        linkType,\n        internalLink->{\n          slug {\n            current\n          }\n        },\n        externalUrl\n      }\n    }\n  }\n,\n      \n  _type == \"contact-form\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    successMessage\n  }\n,\n      \n  _type == \"waveDivider\" => {\n    _type,\n    _key,\n    variant->{\n      label,\n      desktopSvg {\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      mobileSvg {\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n, // Add the waveDivider query\n    },\n    meta_title,\n    meta_description,\n    noindex,\n    ogImage {\n      asset->{\n        _id,\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n    }\n  }\n": PAGE_QUERYResult;
    "*[_type == \"page\" && defined(slug)]{slug}": PAGES_SLUGS_QUERYResult;
    "*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  slug,\n  image {\n    ...,\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    },\n    alt\n  },\n  body[] {\n    ...,\n    _type == \"image\" => {\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    }\n  },\n  categories[]->{\n    _id,\n    title,\n    slug\n  },\n  doctorAuthor-> {\n    _id,\n    name,\n    slug,\n    photo {\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions { width, height }\n        }\n      }\n    },\n    specialty,\n    experienceYears,\n    expertise,\n    whatsappNumber,\n    appointmentFee,\n    reviews[]->{\n      _id,\n      name,\n      rating,\n      comment,\n      submittedAt\n    }\n  },\n  _createdAt,\n  _updatedAt,\n  meta_title,\n  meta_description,\n  noindex,\n  ogImage {\n    asset->{\n      _id,\n      url,\n      metadata {\n        dimensions {\n          width,\n          height\n        }\n      }\n    }\n  }\n}": POST_QUERYResult;
    "*[_type == \"post\" && defined(slug.current)] | order(_createdAt desc) {\n  _id,\n  title,\n  slug,\n  excerpt,\n  publishedAt,\n  image {\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    },\n    alt\n  },\n  doctorAuthor-> {\n    _id,\n    name,\n    slug,\n    specialty,\n    photo {\n      asset->{ url }\n    }\n  }\n}": POSTS_QUERYResult;
    "*[_type == \"post\" && defined(slug.current)]{\n  slug\n}": POSTS_SLUGS_QUERYResult;
    "\n*[_type == \"category\"]{\n  _id,\n  title,\n  \"posts\": *[\n    _type == \"post\" &&\n    references(^._id)\n  ] | order(_createdAt desc)[0...3] {\n    _id,\n    title,\n    slug,\n    excerpt,\n    image {\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    }\n  }\n}\n": BLOG_PREVIEW_QUERYResult;
    "\n  *[_type == \"specialities\" && slug.current == $slug][0]{\n    title,\n    blocks[]{\n      \n  _type == \"hero-1\" => {\n    _type,\n    _key,\n    theme,\n    layout,\n    reverseOnMobile,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    image{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    showButton,\n    buttonType,\n    customButton {\n      label,\n      link,\n      isExternal\n    }\n  }\n,\n      \n  _type == \"hero-2\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    buttons[]{\n      buttonLabel,\n      buttonType,\n      link {\n        internalLink->{\n          slug {\n            current\n          }\n        },\n        externalUrl\n      },\n      buttonVariant,\n      whatsappPhone,\n      whatsappMessage\n    }\n  }\n,\n      \n  _type == \"section-header\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionWidth,\n    stackAlign,\n    tagLine,\n    title,\n    description,\n    link,\n  }\n,\n      \n  _type == \"split-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    noGap,\n    splitColumns[]{\n      \n  _type == \"split-content\" => {\n    _type,\n    _key,\n    sticky,\n    padding,\n    colorVariant,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    link,\n  }\n,\n      \n  _type == \"split-cards-list\" => {\n    _type,\n    _key,\n    list[]{\n      tagLine,\n      title,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"split-image\" => {\n    _type,\n    _key,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"split-info-list\" => {\n    _type,\n    _key,\n    list[]{\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      title,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n      tags[],\n    },\n  }\n,\n    },\n  }\n,\n      \n  _type == \"grid-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    gridColumns,\n    columns[]{\n      \n  _type == \"grid-card\" => {\n    _type,\n    _key,\n    title,\n    excerpt,\n    image{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    link,\n  }\n,\n      \n  _type == \"pricing-card\" => {\n    _type,\n    _key,\n    title,\n    tagLine,\n    price,\n    list[],\n    excerpt,\n    link,\n  }\n,\n      \n  _type == \"grid-post\" => {\n    _type,\n    _key,\n    post->{\n      title,\n      slug,\n      excerpt,\n      image{\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      categories[]->{\n        _id,\n        title,\n      },\n    },\n  }\n,\n    },\n  }\n,\n      \n  _type == \"carousel-1\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    orientation,\n  }\n,\n      \n  _type == \"carousel-2\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body,\n    buttonText,\n    buttonLink,\n    testimonial[]->{\n      _id,\n      name,\n      title,\n      image{\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n      rating,\n    },\n  }\n,\n      \n  _type == \"timeline-row\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    timelines[]{\n      title,\n      tagLine,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"cta-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    sectionWidth,\n    stackAlign,\n    tagLine,\n    title,\n    body[]{\n      ...,\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    links,\n  }\n,\n      \n  _type == \"logo-cloud-1\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    title,\n    images[]{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"faqs\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body,\n    faqs[]->{\n      _id,\n      title,\n      body[]{\n        ...,\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"form-newsletter\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n    stackAlign,\n    consentText,\n    buttonText,\n    successMessage,\n  }\n,\n      \n  _type == \"all-posts\" => {\n    _type,\n    _key,\n    padding,\n    colorVariant,\n  }\n,\n      \n  _type == \"section-block\" => {\n    _type,\n    _key,\n    theme,\n    layout,\n    reverseOnMobile,\n    tagLine,\n    title,\n    body,\n    image {\n      ...,\n      alt,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      }\n    },\n    buttonLabel,\n    link {\n      internalLink->{\n        slug {\n          current\n        }\n      },\n      externalUrl\n    },\n    buttonVariant,\n    wavePair->{\n      label,\n      desktop {\n        asset->{\n          url\n        }\n      },\n      mobile {\n        asset->{\n          url\n        }\n      }\n    }\n  }\n,\n      \n  _type == \"specialty-card\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    body,\n    cards[] {\n      _key,\n      name,\n      image {\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      link {\n        linkType,\n        internalLink->{\n          slug {\n            current\n          }\n        },\n        externalUrl\n      }\n    }\n  }\n,\n      \n  _type == \"contact-form\" => {\n    _type,\n    _key,\n    theme,\n    tagLine,\n    title,\n    successMessage\n  }\n,\n      \n  _type == \"waveDivider\" => {\n    _type,\n    _key,\n    variant->{\n      label,\n      desktopSvg {\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      },\n      mobileSvg {\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n,\n    },\n    meta_title,\n    meta_description,\n    noindex,\n    ogImage {\n      asset->{\n        _id,\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n    }\n  }\n": SPECIALITIES_PAGE_QUERYResult;
    "*[_type == \"specialities\" && defined(slug)]{slug}": SPECIALITIES_SLUGS_QUERYResult;
  }
}
